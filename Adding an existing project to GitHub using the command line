1. Create a new repository on GitHub. To avoid errors, do not initialize the new repository with README, license, or gitignore files. 
   You can add these files after your project has been pushed to GitHub.

2. In Unix, Change the current working directory to your local project.

3. Initialize the local directory as a Git repository.
   [dzheng36@sundev52 fastsearch-bbds]$ git init
   Initialized empty Git repository in /bb/mbige/mbig4946/danning/fastsearch/fastsearch-bbds/.git/

4. Add the files in your new local repository. This stages them for the first commit.
   [dzheng36@sundev52 fastsearch-bbds (master)]$ git add .
   # Adds the files in the local repository and stages them for commit. To unstage a file, use 'git reset HEAD YOUR-FILE'.
   Commit the files that you've staged in your local repository.
   [dzheng36@sundev52 fastsearch-bbds (master)]$ git commit -m "Initial commit."
   # Commits the tracked changes and prepares them to be pushed to a remote repository. To remove this commit and modify the file, use 'git reset --soft HEAD~1' and commit and add the file again.
   Copy remote repository URL fieldAt the top of your GitHub repository's Quick Setup page, click  to copy the remote repository URL.

5. In the Command prompt, add the URL for the remote repository where your local repository will be pushed.
   [dzheng36@sundev52 fastsearch-bbds (master)]$ git remote add origin remote git@bbgithub.dev.bloomberg.com:dzheng36/Fastsearch-BBDS.git
   [dzheng36@sundev52 fastsearch-bbds (master)]$ git remote -v
   origin  git@bbgithub.dev.bloomberg.com:dzheng36/Fastsearch-BBDS.git (fetch)
   origin  git@bbgithub.dev.bloomberg.com:dzheng36/Fastsearch-BBDS.git (push)

6. Push the changes in your local repository to GitHub.
   git push origin master
